import{a as c}from"./authGuard-B-UGLlJ5.js";import{h as i}from"./headers-CUOiYHL-.js";import{b as p}from"./app-BThhd6Gm.js";class d{constructor(t="https://v2.api.noroff.dev/social/profiles"){this.baseApiUrl=t}async getProfile(t,o=!1){if(!t)throw new Error("Username is required to fetch a profile.");const s=`${this.baseApiUrl}/${t}?_posts=${o}`;console.log("Fetching from API URL:",s);try{const e=i();console.log("Headers being sent:",{"Content-Type":e.get("Content-Type"),Authorization:e.get("Authorization")});const r=await fetch(s,{headers:e});if(!r.ok)throw console.error("API response status:",r.status),new Error(`Failed to fetch profile data: ${r.status}`);const n=await r.json();return console.log("Profile data:",n),console.log("Full API response for profile:",n),n}catch(e){throw console.error("Error fetching profile data:",e.message),e}}async getProfiles(t=10,o=1){const s=`${this.baseApiUrl}?limit=${t}&page=${o}`;try{const e=await fetch(s,{headers:i()});if(!e.ok)throw new Error("Failed to fetch profiles");const r=await e.json();return console.log("Profiles data:",r),r}catch(e){throw console.error("Error fetching profiles:",e.message),e}}}c();console.log("Profile page script is running");(async function(){document.readyState==="loading"?(console.log("DOM is still loading, setting event listener"),document.addEventListener("DOMContentLoaded",l)):(console.log("DOM already loaded, running setup directly"),await l())})();async function l(){console.log("Setting up profile page");try{const a=new d,t=JSON.parse(localStorage.getItem("userDetails"));if(!t?.name){console.error("User details are missing or invalid.");return}const o=t.name;console.log("Fetching user profile for:",o);const e=(await a.getProfile(o,!0))?.data;if(!e){console.error("Failed to fetch user profile data.");return}f(e),u(e.posts||[],o)}catch(a){console.error("Error fetching user profile or posts:",a.message)}}function f({name:a,email:t,bio:o,avatar:s,banner:e}){const r=document.getElementById("dynamic-profile-details");if(!r){console.error("Dynamic profile details section not found.");return}if(s?.url){const n=document.querySelector(".personal-avatar");n&&(n.style.display="none")}r.innerHTML=`
    <h2>${a}</h2>
    <p>Email: ${t}</p>
    ${o?`<p>Bio: ${o}</p>`:""}
    ${s?.url?`<img src="${s.url}" alt="${s.alt||"Avatar"}" class="profile-avatar" />`:"<p>No avatar available</p>"}
    ${e?.url?`<img src="${e.url}" alt="${e.alt||"Banner"}" class="profile-banner" />`:"<p>No banner available</p>"}
  `}function u(a,t){const o=document.querySelector(".post-container");if(!o){console.error("Post container not found.");return}o.innerHTML="";const s=document.createElement("h2");if(s.textContent=`${t}'s Posts`,o.appendChild(s),a.length===0){o.innerHTML=`<h2>${t}'s Posts</h2><p>No posts found.</p>`;return}const e=document.createElement("div");e.className="post-list",a.forEach(r=>{const n=document.createElement("div");n.className="post-card",n.innerHTML=`
      <div class="post-content">
        <h3>
          <a href="${p}/post/?id=${r.id}" class="post-link">${r.title||"Untitled Post"}</a>
        </h3>
        <p>${r.body||"No content available."}</p>
        ${r.media?.url?`<img src="${r.media.url}" alt="${r.media.alt||"Post image"}" class="post-image" />`:"<p>No image available</p>"}
      </div>
    `,e.appendChild(n)}),o.innerHTML=`<h2>${t}'s Posts</h2>`,o.appendChild(e)}
